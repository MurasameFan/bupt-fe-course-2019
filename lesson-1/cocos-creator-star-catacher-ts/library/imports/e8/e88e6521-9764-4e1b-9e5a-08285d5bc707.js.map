{"version":3,"sources":["../../../../assets/scripts/assets/scripts/Star.ts"],"names":[],"mappings":";;;;AAAA,oBAAoB;AACpB,kFAAkF;AAClF,yFAAyF;AACzF,mBAAmB;AACnB,4FAA4F;AAC5F,mGAAmG;AACnG,8BAA8B;AAC9B,4FAA4F;AAC5F,mGAAmG;;AAG7F,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAAQ,CAAmB;AAG5C;IAAkC,wBAAY;IAD9C;QAAA,qEAwCC;QAtCG,2BAA2B;QAE3B,gBAAU,GAAW,CAAC,CAAC;;IAoC3B,CAAC;IAhCG,wBAAwB;IAExB,gCAAiB,GAAjB;QACI,qBAAqB;QACrB,IAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;QACjD,iBAAiB;QACjB,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC;QACrD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,uBAAQ,GAAR;QACI,kCAAkC;QAClC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;QACzB,kBAAkB;QAClB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;QACtB,aAAa;QACb,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;IACxB,CAAC;IAED,qBAAM,GAAN,UAAO,EAAE;QACL,uBAAuB;QACvB,IAAI,IAAI,CAAC,iBAAiB,EAAE,GAAG,IAAI,CAAC,UAAU,EAAE;YAC5C,SAAS;YACT,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,OAAO;SACV;QACD,0BAA0B;QAC1B,IAAM,YAAY,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;QAClE,IAAM,UAAU,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,IAAI,CAAC,OAAO;YACb,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,CAAC,GAAG,GAAG,UAAU,CAAC,CAAC,CAAC;IACnE,CAAC;IAnCD;QADC,QAAQ;4CACc;IAHN,IAAI;QADxB,OAAO;OACa,IAAI,CAuCxB;IAAD,WAAC;CAvCD,AAuCC,CAvCiC,EAAE,CAAC,SAAS,GAuC7C;kBAvCoB,IAAI","file":"","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn TypeScript:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/typescript.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport Game from './Game';\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class Star extends cc.Component {\n    // 星星和主角之间的距离小于这个数值时，就会完成收集\n    @property\n    pickRadius: number = 0;\n\n    game: Game;\n\n    // LIFE-CYCLE CALLBACKS:\n\n    getPlayerDistance() {\n        // 根据 player 节点位置判断距离\n        const playerPos = this.game.player.getPosition();\n        // 根据两点位置计算两点之间距离\n        const dist = this.node.position.sub(playerPos).mag();\n        return dist;\n    }\n\n    onPicked() {\n        // 当星星被收集时，调用 Game 脚本中的接口，生成一个新的星星\n        this.game.spawnNewStar();\n        // 调用 Game 脚本的得分方法\n        this.game.gainScore();\n        // 然后销毁当前星星节点\n        this.node.destroy();\n    }\n\n    update(dt) {\n        // 每帧判断和主角之间的距离是否小于收集距离\n        if (this.getPlayerDistance() < this.pickRadius) {\n            // 调用收集行为\n            this.onPicked();\n            return;\n        }\n        // 根据 Game 脚本中的计时器更新星星的透明度\n        const opacityRatio = 1 - this.game.timer / this.game.starDuration;\n        const minOpacity = 50;\n        this.node.opacity =\n            minOpacity + Math.floor(opacityRatio * (255 - minOpacity));\n    }\n}\n"]}