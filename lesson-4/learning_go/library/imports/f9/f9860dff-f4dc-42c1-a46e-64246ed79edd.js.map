{"version":3,"sources":["../../../../../assets/Script/view/assets/Script/view/Board.ts"],"names":[],"mappings":";;;;AAAA,oBAAoB;AACpB,kFAAkF;AAClF,yFAAyF;AACzF,mBAAmB;AACnB,4FAA4F;AAC5F,mGAAmG;AACnG,8BAA8B;AAC9B,4FAA4F;AAC5F,mGAAmG;;AAE7F,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAAQ,CAAmB;AAE5C,uCAAsD;AAGtD;IAAmC,yBAAY;IAD/C;QAAA,qEAwDC;QArDG,iBAAW,GAAc,IAAI,CAAC;QAI9B,uBAAuB;QACvB,yBAAyB;QAGzB,UAAI,GAAW,EAAE,CAAA;QAmBV,aAAO,GAAG;YACb,IAAM,IAAI,GAAG;gBACT,IAAI,EAAE,KAAI,CAAC,IAAI;gBACf,IAAI,EAAE,KAAI,CAAC,IAAI;gBACf,IAAI,EAAE,kBAAU,CAAC,QAAQ;aAC5B,CAAA;YAED,OAAO,IAAI,CAAC;QAChB,CAAC,CAAA;QAEO,mBAAa,GAAG;YACpB,cAAc;YACd,KAAK;YACL,IAAM,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;YAC9D,KAAK;YACL,IAAM,QAAQ,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACjE,OAAO;YACP,OAAO,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC;QAC3D,CAAC,CAAC;;IAQN,CAAC;IA1CG,wBAAwB;IAExB,sBAAM,GAAN;QACI,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;QAC7B,IAAI,MAAM,GAAG,GAAG,EAAE;YACd,iBAAiB;YACjB,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;SAC7C;aAAM,IAAI,GAAG,GAAG,MAAM,IAAI,MAAM,GAAG,GAAG,EAAE;YACrC,WAAW;YACX,IAAI,CAAC,WAAW,EAAE,CAAC;SACtB;aAAM,IAAI,GAAG,GAAG,MAAM,IAAI,MAAM,GAAG,GAAG,EAAE;YACrC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;SAC7C;IACL,CAAC;IAsBM,2BAAW,GAAlB;QACI,IAAM,KAAK,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC/C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,KAAK,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;IACtE,CAAC;IApDD;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;8CACU;IAQ9B;QADC,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC;uCACJ;IAVA,KAAK;QADzB,OAAO;OACa,KAAK,CAuDzB;IAAD,YAAC;CAvDD,AAuDC,CAvDkC,EAAE,CAAC,SAAS,GAuD9C;kBAvDoB,KAAK","file":"","sourceRoot":"../../../../../assets/Script/view","sourcesContent":["// Learn TypeScript:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/typescript.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst { ccclass, property } = cc._decorator;\n\nimport { BlockInfo, BLOCK_TYPE } from './const/block';\n\n@ccclass\nexport default class Board extends cc.Component {\n    @property(cc.Prefab)\n    stonePrefab: cc.Prefab = null;\n\n    stone: cc.Node;\n\n    // @property(cc.String)\n    // name: string = 'board'\n\n    @property(cc.Integer)\n    hurt: number = 20\n\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n        const chance = Math.random();\n        if (chance < 0.1) {\n            // 20%的几率生成上下移动石块\n            this.appearStone();\n            this.node.runAction(this.setJumpAction());\n        } else if (0.2 < chance && chance < 0.3) {\n            // 10%几率单石块\n            this.appearStone();\n        } else if (0.3 < chance && chance < 0.4) {\n            this.node.runAction(this.setJumpAction());\n        }\n    }\n\n    public getInfo = ():BlockInfo => {\n        const data = {\n            name: this.name,\n            hurt: this.hurt,\n            type: BLOCK_TYPE.PLATFORM,\n        }\n\n        return data;\n    }\n\n    private setJumpAction = () => {\n        // 可以参考第一节跳跃方法\n        // 上升\n        const jumpUp = cc.moveBy(Math.random() * 1 + 1, cc.v2(0, 50));\n        // 下落\n        const jumpDown = cc.moveBy(Math.random() * 1 + 1, cc.v2(0, -50));\n        // 不断重复\n        return cc.repeatForever(cc.sequence(jumpUp, jumpDown));\n    };\n\n    public appearStone() {\n        const stone = cc.instantiate(this.stonePrefab);\n        this.node.addChild(stone);\n        this.stone = stone;\n        stone.setPosition(new cc.Vec2(this.node.width / 2, stone.height));\n    }\n}\n"]}