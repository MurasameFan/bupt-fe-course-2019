{"version":3,"sources":["../../../../../assets/Script/view/assets/Script/view/OverPanel.ts"],"names":[],"mappings":";;;;AAAA,oBAAoB;AACpB,kFAAkF;AAClF,yFAAyF;AACzF,mBAAmB;AACnB,4FAA4F;AAC5F,mGAAmG;AACnG,8BAA8B;AAC9B,4FAA4F;AAC5F,mGAAmG;;AAE7F,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAAQ,CAAmB;AAS5C;IAAuC,6BAAY;IADnD;QAAA,qEAsBC;QAjBG,UAAI,GAAY,IAAI,CAAC;QAGrB,eAAS,GAAa,IAAI,CAAC;;QAa3B,iBAAiB;IACrB,CAAC;IAbG,wBAAwB;IAExB,0BAAM,GAAN;QACI,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QACpD,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IAC7B,CAAC;IAEM,wBAAI,GAAX,UAAY,KAAa;QACrB,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,uBAAM,KAAO,CAAA;IACzC,CAAC;IAdD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;2CACG;IAGrB;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;gDACQ;IAPV,SAAS;QAD7B,OAAO;OACa,SAAS,CAqB7B;IAAD,gBAAC;CArBD,AAqBC,CArBsC,EAAE,CAAC,SAAS,GAqBlD;kBArBoB,SAAS","file":"","sourceRoot":"../../../../../assets/Script/view","sourcesContent":["// Learn TypeScript:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/typescript.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst { ccclass, property } = cc._decorator;\n\nimport { GameAction } from '../controller/Game';\n\nexport type OverPanelAction = {\n    show: (socre: number) => void;\n};\n\n@ccclass\nexport default class OverPanel extends cc.Component {\n    GameComponent: GameAction;\n\n    @property(cc.Node)\n    game: cc.Node = null;\n\n    @property(cc.Label)\n    overScore: cc.Label = null;\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n        this.GameComponent = this.game.getComponent('Game');\n        this.node.active = false;\n    }\n\n    public show(score: number) {\n        this.node.active = true;\n        this.overScore.string = `得分：${score}`\n    }\n\n    // update (dt) {}\n}\n"]}